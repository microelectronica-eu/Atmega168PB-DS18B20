
Atmega168pb_LCD_16MHZ_DS18B20.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000d2a  00000dbe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d2a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  0080010c  0080010c  00000dca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000dca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001445  00000000  00000000  00000f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a6c  00000000  00000000  0000238d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000084f  00000000  00000000  00002df9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000214  00000000  00000000  00003648  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000641  00000000  00000000  0000385c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e46  00000000  00000000  00003e9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005ce3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

0000006c <__ctors_end>:
  6c:	11 24       	eor	r1, r1
  6e:	1f be       	out	0x3f, r1	; 63
  70:	cf ef       	ldi	r28, 0xFF	; 255
  72:	d4 e0       	ldi	r29, 0x04	; 4
  74:	de bf       	out	0x3e, r29	; 62
  76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
  78:	11 e0       	ldi	r17, 0x01	; 1
  7a:	a0 e0       	ldi	r26, 0x00	; 0
  7c:	b1 e0       	ldi	r27, 0x01	; 1
  7e:	ea e2       	ldi	r30, 0x2A	; 42
  80:	fd e0       	ldi	r31, 0x0D	; 13
  82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
  84:	05 90       	lpm	r0, Z+
  86:	0d 92       	st	X+, r0
  88:	ac 30       	cpi	r26, 0x0C	; 12
  8a:	b1 07       	cpc	r27, r17
  8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
  8e:	21 e0       	ldi	r18, 0x01	; 1
  90:	ac e0       	ldi	r26, 0x0C	; 12
  92:	b1 e0       	ldi	r27, 0x01	; 1
  94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
  96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
  98:	ad 32       	cpi	r26, 0x2D	; 45
  9a:	b2 07       	cpc	r27, r18
  9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>
  9e:	0e 94 23 02 	call	0x446	; 0x446 <main>
  a2:	0c 94 93 06 	jmp	0xd26	; 0xd26 <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <Serial_send>:
  E_ON;
  delay();
  E_OFF  ;
 }

void Serial_send(unsigned char x){
  aa:	98 e0       	ldi	r25, 0x08	; 8
	unsigned char i;
	for(i=8;i>0;i--){
		Serial_CLK_off ;
  ac:	71 98       	cbi	0x0e, 1	; 14
		if((x&0x80)){
  ae:	88 23       	and	r24, r24
  b0:	14 f4       	brge	.+4      	; 0xb6 <Serial_send+0xc>
			Serial_Data_on;
  b2:	70 9a       	sbi	0x0e, 0	; 14
  b4:	01 c0       	rjmp	.+2      	; 0xb8 <Serial_send+0xe>
			} else {
			Serial_Data_off;
  b6:	70 98       	cbi	0x0e, 0	; 14
		}
		Serial_CLK_on;
  b8:	71 9a       	sbi	0x0e, 1	; 14
		x <<= 1;
  ba:	88 0f       	add	r24, r24
  bc:	91 50       	subi	r25, 0x01	; 1
  E_OFF  ;
 }

void Serial_send(unsigned char x){
	unsigned char i;
	for(i=8;i>0;i--){
  be:	b1 f7       	brne	.-20     	; 0xac <Serial_send+0x2>
			Serial_Data_off;
		}
		Serial_CLK_on;
		x <<= 1;
	}
}
  c0:	08 95       	ret

000000c2 <delay>:
void delay(void)
 {
  c2:	80 e1       	ldi	r24, 0x10	; 16
  c4:	97 e2       	ldi	r25, 0x27	; 39
 	unsigned int i;
 	
 	for(i=0;i<10000;i++)
 	{
	 	asm("nop");
  c6:	00 00       	nop
  c8:	01 97       	sbiw	r24, 0x01	; 1
}
void delay(void)
 {
 	unsigned int i;
 	
 	for(i=0;i<10000;i++)
  ca:	e9 f7       	brne	.-6      	; 0xc6 <delay+0x4>
 	{
	 	asm("nop");
	 	
 	}
  }
  cc:	08 95       	ret

000000ce <write_inst>:
    write_inst(0x06)  ;//comad_LCD=0x06 ; /*//Entry mode, Set increment 00000110 */
 }
 
 void write_inst(unsigned char comand_LCD)
  {
    RS_OFF ;
  ce:	5e 98       	cbi	0x0b, 6	; 11
    Serial_send(comand_LCD) ;
  d0:	0e 94 55 00 	call	0xaa	; 0xaa <Serial_send>
    E_ON ;
  d4:	5f 9a       	sbi	0x0b, 7	; 11
    delay();
  d6:	0e 94 61 00 	call	0xc2	; 0xc2 <delay>
    E_OFF ;
  da:	5f 98       	cbi	0x0b, 7	; 11
  dc:	08 95       	ret

000000de <init_LCD>:
		
		
 void init_LCD(void)
 {  
	//RW_off;
    write_inst(0x01)  ; // clr LCD
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
    write_inst(0x38)  ; //comad_LCD=0x38 ; /*//Function set, ;Data 8 bit_2 line font 5x7  00111000 */
  e4:	88 e3       	ldi	r24, 0x38	; 56
  e6:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
    write_inst(0x0C)  ; //comad_LCD=0x0C ; /*///Display on,  00001100   E = cursor on */
  ea:	8c e0       	ldi	r24, 0x0C	; 12
  ec:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
    write_inst(0x06)  ;//comad_LCD=0x06 ; /*//Entry mode, Set increment 00000110 */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
  f6:	08 95       	ret

000000f8 <write_data>:
    E_OFF ;
  }
 
 void write_data(unsigned char Data_LCD)
 { 
  RS_ON;
  f8:	5e 9a       	sbi	0x0b, 6	; 11
  Serial_send(Data_LCD);
  fa:	0e 94 55 00 	call	0xaa	; 0xaa <Serial_send>
  E_ON;
  fe:	5f 9a       	sbi	0x0b, 7	; 11
  delay();
 100:	0e 94 61 00 	call	0xc2	; 0xc2 <delay>
  E_OFF  ;
 104:	5f 98       	cbi	0x0b, 7	; 11
 106:	08 95       	ret

00000108 <print_char>:
	
void print_char(char c){   // print one character , can be used to send one character 
    //Data_LCD=c   ;
	   unsigned char send_data;
	    send_data=c;
    write_data(send_data) ;
 108:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_data>
 10c:	08 95       	ret

0000010e <math_raw>:
		
    }
}

void math_raw(unsigned char LCD_Adresa, unsigned int data_raw)
{
 10e:	bf 92       	push	r11
 110:	cf 92       	push	r12
 112:	df 92       	push	r13
 114:	ef 92       	push	r14
 116:	ff 92       	push	r15
 118:	0f 93       	push	r16
 11a:	1f 93       	push	r17
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	b8 2e       	mov	r11, r24
 122:	ab 01       	movw	r20, r22
  
  mat= data_raw ;
  
  
  zecemii=mat/10000 ;
  mat=mat%10000 ;
 124:	6b 01       	movw	r12, r22
 126:	d6 94       	lsr	r13
 128:	c7 94       	ror	r12
 12a:	d6 94       	lsr	r13
 12c:	c7 94       	ror	r12
 12e:	d6 94       	lsr	r13
 130:	c7 94       	ror	r12
 132:	d6 94       	lsr	r13
 134:	c7 94       	ror	r12
 136:	96 01       	movw	r18, r12
 138:	a7 e4       	ldi	r26, 0x47	; 71
 13a:	b3 e0       	ldi	r27, 0x03	; 3
 13c:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 140:	fc 01       	movw	r30, r24
 142:	f6 95       	lsr	r31
 144:	e7 95       	ror	r30
 146:	f6 95       	lsr	r31
 148:	e7 95       	ror	r30
 14a:	f6 95       	lsr	r31
 14c:	e7 95       	ror	r30
 14e:	20 e1       	ldi	r18, 0x10	; 16
 150:	37 e2       	ldi	r19, 0x27	; 39
 152:	e2 9f       	mul	r30, r18
 154:	c0 01       	movw	r24, r0
 156:	e3 9f       	mul	r30, r19
 158:	90 0d       	add	r25, r0
 15a:	f2 9f       	mul	r31, r18
 15c:	90 0d       	add	r25, r0
 15e:	11 24       	eor	r1, r1
 160:	fa 01       	movw	r30, r20
 162:	e8 1b       	sub	r30, r24
 164:	f9 0b       	sbc	r31, r25
  mii= mat/1000;
  mat= mat%1000 ;
 166:	7f 01       	movw	r14, r30
 168:	f6 94       	lsr	r15
 16a:	e7 94       	ror	r14
 16c:	f6 94       	lsr	r15
 16e:	e7 94       	ror	r14
 170:	f6 94       	lsr	r15
 172:	e7 94       	ror	r14
 174:	97 01       	movw	r18, r14
 176:	a5 ec       	ldi	r26, 0xC5	; 197
 178:	b0 e2       	ldi	r27, 0x20	; 32
 17a:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 17e:	ac 01       	movw	r20, r24
 180:	52 95       	swap	r21
 182:	42 95       	swap	r20
 184:	4f 70       	andi	r20, 0x0F	; 15
 186:	45 27       	eor	r20, r21
 188:	5f 70       	andi	r21, 0x0F	; 15
 18a:	45 27       	eor	r20, r21
 18c:	28 ee       	ldi	r18, 0xE8	; 232
 18e:	33 e0       	ldi	r19, 0x03	; 3
 190:	42 9f       	mul	r20, r18
 192:	c0 01       	movw	r24, r0
 194:	43 9f       	mul	r20, r19
 196:	90 0d       	add	r25, r0
 198:	52 9f       	mul	r21, r18
 19a:	90 0d       	add	r25, r0
 19c:	11 24       	eor	r1, r1
 19e:	af 01       	movw	r20, r30
 1a0:	48 1b       	sub	r20, r24
 1a2:	59 0b       	sbc	r21, r25
  sute= mat/100 ;
  mat= mat%100 ;
 1a4:	ea 01       	movw	r28, r20
 1a6:	d6 95       	lsr	r29
 1a8:	c7 95       	ror	r28
 1aa:	d6 95       	lsr	r29
 1ac:	c7 95       	ror	r28
 1ae:	9e 01       	movw	r18, r28
 1b0:	ab e7       	ldi	r26, 0x7B	; 123
 1b2:	b4 e1       	ldi	r27, 0x14	; 20
 1b4:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 1b8:	8c 01       	movw	r16, r24
 1ba:	16 95       	lsr	r17
 1bc:	07 95       	ror	r16
 1be:	24 e6       	ldi	r18, 0x64	; 100
 1c0:	20 9f       	mul	r18, r16
 1c2:	c0 01       	movw	r24, r0
 1c4:	21 9f       	mul	r18, r17
 1c6:	90 0d       	add	r25, r0
 1c8:	11 24       	eor	r1, r1
 1ca:	8a 01       	movw	r16, r20
 1cc:	08 1b       	sub	r16, r24
 1ce:	19 0b       	sbc	r17, r25
  dat_b1 = mii+0x30 ;
  dat_c1 = sute+0x30  ;
  dat_d1 = zeci+0x30 ;
  dat_e1 = unitati+0x30;
  
  write_inst(LCD_Adresa);
 1d0:	8b 2d       	mov	r24, r11
 1d2:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
  print_char(dat_a1)   ;
 1d6:	96 01       	movw	r18, r12
 1d8:	a7 e4       	ldi	r26, 0x47	; 71
 1da:	b3 e0       	ldi	r27, 0x03	; 3
 1dc:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 1e0:	96 95       	lsr	r25
 1e2:	87 95       	ror	r24
 1e4:	96 95       	lsr	r25
 1e6:	87 95       	ror	r24
 1e8:	96 95       	lsr	r25
 1ea:	87 95       	ror	r24
 1ec:	80 5d       	subi	r24, 0xD0	; 208
 1ee:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
  print_char(dat_b1)   ;
 1f2:	97 01       	movw	r18, r14
 1f4:	a5 ec       	ldi	r26, 0xC5	; 197
 1f6:	b0 e2       	ldi	r27, 0x20	; 32
 1f8:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 1fc:	92 95       	swap	r25
 1fe:	82 95       	swap	r24
 200:	8f 70       	andi	r24, 0x0F	; 15
 202:	89 27       	eor	r24, r25
 204:	9f 70       	andi	r25, 0x0F	; 15
 206:	89 27       	eor	r24, r25
 208:	80 5d       	subi	r24, 0xD0	; 208
 20a:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
  print_char(dat_c1)   ;
 20e:	9e 01       	movw	r18, r28
 210:	ab e7       	ldi	r26, 0x7B	; 123
 212:	b4 e1       	ldi	r27, 0x14	; 20
 214:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 218:	96 95       	lsr	r25
 21a:	87 95       	ror	r24
 21c:	80 5d       	subi	r24, 0xD0	; 208
 21e:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
  print_char(dat_d1)   ;
 222:	98 01       	movw	r18, r16
 224:	ad ec       	ldi	r26, 0xCD	; 205
 226:	bc ec       	ldi	r27, 0xCC	; 204
 228:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 22c:	ec 01       	movw	r28, r24
 22e:	d6 95       	lsr	r29
 230:	c7 95       	ror	r28
 232:	d6 95       	lsr	r29
 234:	c7 95       	ror	r28
 236:	d6 95       	lsr	r29
 238:	c7 95       	ror	r28
 23a:	8c 2f       	mov	r24, r28
 23c:	80 5d       	subi	r24, 0xD0	; 208
 23e:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
  print_char(dat_e1) ;
 242:	ce 01       	movw	r24, r28
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	cc 0f       	add	r28, r28
 24a:	dd 1f       	adc	r29, r29
 24c:	cc 0f       	add	r28, r28
 24e:	dd 1f       	adc	r29, r29
 250:	cc 0f       	add	r28, r28
 252:	dd 1f       	adc	r29, r29
 254:	c8 0f       	add	r28, r24
 256:	d9 1f       	adc	r29, r25
 258:	c8 01       	movw	r24, r16
 25a:	8c 1b       	sub	r24, r28
 25c:	9d 0b       	sbc	r25, r29
 25e:	80 5d       	subi	r24, 0xD0	; 208
 260:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
  //print_char(b1) ;
  //print_char(c1) ;
  //Caracter_1=d1 ;
  //Caracter_2=e1;	
	
}
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	ff 90       	pop	r15
 26e:	ef 90       	pop	r14
 270:	df 90       	pop	r13
 272:	cf 90       	pop	r12
 274:	bf 90       	pop	r11
 276:	08 95       	ret

00000278 <math>:


void math( unsigned int MATH_DATA)
{
 278:	fc 01       	movw	r30, r24
	
	mat= MATH_DATA ;
	
	
	zecemii=mat/10000 ;
	mat=mat%10000 ;
 27a:	9c 01       	movw	r18, r24
 27c:	32 95       	swap	r19
 27e:	22 95       	swap	r18
 280:	2f 70       	andi	r18, 0x0F	; 15
 282:	23 27       	eor	r18, r19
 284:	3f 70       	andi	r19, 0x0F	; 15
 286:	23 27       	eor	r18, r19
 288:	a7 e4       	ldi	r26, 0x47	; 71
 28a:	b3 e0       	ldi	r27, 0x03	; 3
 28c:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 290:	ac 01       	movw	r20, r24
 292:	56 95       	lsr	r21
 294:	47 95       	ror	r20
 296:	56 95       	lsr	r21
 298:	47 95       	ror	r20
 29a:	56 95       	lsr	r21
 29c:	47 95       	ror	r20
 29e:	20 e1       	ldi	r18, 0x10	; 16
 2a0:	37 e2       	ldi	r19, 0x27	; 39
 2a2:	42 9f       	mul	r20, r18
 2a4:	c0 01       	movw	r24, r0
 2a6:	43 9f       	mul	r20, r19
 2a8:	90 0d       	add	r25, r0
 2aa:	52 9f       	mul	r21, r18
 2ac:	90 0d       	add	r25, r0
 2ae:	11 24       	eor	r1, r1
 2b0:	af 01       	movw	r20, r30
 2b2:	48 1b       	sub	r20, r24
 2b4:	59 0b       	sbc	r21, r25
	mii= mat/1000;
	mat= mat%1000 ;
 2b6:	9a 01       	movw	r18, r20
 2b8:	36 95       	lsr	r19
 2ba:	27 95       	ror	r18
 2bc:	36 95       	lsr	r19
 2be:	27 95       	ror	r18
 2c0:	36 95       	lsr	r19
 2c2:	27 95       	ror	r18
 2c4:	a5 ec       	ldi	r26, 0xC5	; 197
 2c6:	b0 e2       	ldi	r27, 0x20	; 32
 2c8:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 2cc:	fc 01       	movw	r30, r24
 2ce:	f2 95       	swap	r31
 2d0:	e2 95       	swap	r30
 2d2:	ef 70       	andi	r30, 0x0F	; 15
 2d4:	ef 27       	eor	r30, r31
 2d6:	ff 70       	andi	r31, 0x0F	; 15
 2d8:	ef 27       	eor	r30, r31
 2da:	28 ee       	ldi	r18, 0xE8	; 232
 2dc:	33 e0       	ldi	r19, 0x03	; 3
 2de:	e2 9f       	mul	r30, r18
 2e0:	c0 01       	movw	r24, r0
 2e2:	e3 9f       	mul	r30, r19
 2e4:	90 0d       	add	r25, r0
 2e6:	f2 9f       	mul	r31, r18
 2e8:	90 0d       	add	r25, r0
 2ea:	11 24       	eor	r1, r1
 2ec:	fa 01       	movw	r30, r20
 2ee:	e8 1b       	sub	r30, r24
 2f0:	f9 0b       	sbc	r31, r25
	sute= mat/100 ;
	mat= mat%100 ;
 2f2:	9f 01       	movw	r18, r30
 2f4:	36 95       	lsr	r19
 2f6:	27 95       	ror	r18
 2f8:	36 95       	lsr	r19
 2fa:	27 95       	ror	r18
 2fc:	ab e7       	ldi	r26, 0x7B	; 123
 2fe:	b4 e1       	ldi	r27, 0x14	; 20
 300:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 304:	ac 01       	movw	r20, r24
 306:	56 95       	lsr	r21
 308:	47 95       	ror	r20
 30a:	24 e6       	ldi	r18, 0x64	; 100
 30c:	24 9f       	mul	r18, r20
 30e:	c0 01       	movw	r24, r0
 310:	25 9f       	mul	r18, r21
 312:	90 0d       	add	r25, r0
 314:	11 24       	eor	r1, r1
 316:	af 01       	movw	r20, r30
 318:	48 1b       	sub	r20, r24
 31a:	59 0b       	sbc	r21, r25
	e1 = unitati+0x30;
	
	//write_inst(locatie); //0xc6
	//print_char(b1) ;
	//print_char(c1) ;
	Caracter_1=d1 ;
 31c:	9a 01       	movw	r18, r20
 31e:	ad ec       	ldi	r26, 0xCD	; 205
 320:	bc ec       	ldi	r27, 0xCC	; 204
 322:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 326:	96 95       	lsr	r25
 328:	87 95       	ror	r24
 32a:	96 95       	lsr	r25
 32c:	87 95       	ror	r24
 32e:	96 95       	lsr	r25
 330:	87 95       	ror	r24
 332:	20 e3       	ldi	r18, 0x30	; 48
 334:	28 0f       	add	r18, r24
 336:	20 93 2c 01 	sts	0x012C, r18	; 0x80012c <Caracter_1>
	Caracter_2=e1;
 33a:	9c 01       	movw	r18, r24
 33c:	22 0f       	add	r18, r18
 33e:	33 1f       	adc	r19, r19
 340:	88 0f       	add	r24, r24
 342:	99 1f       	adc	r25, r25
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	88 0f       	add	r24, r24
 34a:	99 1f       	adc	r25, r25
 34c:	82 0f       	add	r24, r18
 34e:	93 1f       	adc	r25, r19
 350:	48 1b       	sub	r20, r24
 352:	59 0b       	sbc	r21, r25
 354:	40 5d       	subi	r20, 0xD0	; 208
 356:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <Caracter_2>
 35a:	08 95       	ret

0000035c <math2>:
	
}

void math2( unsigned int MATH_DATA2)
{
 35c:	cf 93       	push	r28
 35e:	df 93       	push	r29
 360:	ac 01       	movw	r20, r24
	
	mat= MATH_DATA2 ;
	
	
	zecemii=mat/10000 ;
	mat=mat%10000 ;
 362:	9c 01       	movw	r18, r24
 364:	32 95       	swap	r19
 366:	22 95       	swap	r18
 368:	2f 70       	andi	r18, 0x0F	; 15
 36a:	23 27       	eor	r18, r19
 36c:	3f 70       	andi	r19, 0x0F	; 15
 36e:	23 27       	eor	r18, r19
 370:	a7 e4       	ldi	r26, 0x47	; 71
 372:	b3 e0       	ldi	r27, 0x03	; 3
 374:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 378:	fc 01       	movw	r30, r24
 37a:	f6 95       	lsr	r31
 37c:	e7 95       	ror	r30
 37e:	f6 95       	lsr	r31
 380:	e7 95       	ror	r30
 382:	f6 95       	lsr	r31
 384:	e7 95       	ror	r30
 386:	20 e1       	ldi	r18, 0x10	; 16
 388:	37 e2       	ldi	r19, 0x27	; 39
 38a:	e2 9f       	mul	r30, r18
 38c:	c0 01       	movw	r24, r0
 38e:	e3 9f       	mul	r30, r19
 390:	90 0d       	add	r25, r0
 392:	f2 9f       	mul	r31, r18
 394:	90 0d       	add	r25, r0
 396:	11 24       	eor	r1, r1
 398:	fa 01       	movw	r30, r20
 39a:	e8 1b       	sub	r30, r24
 39c:	f9 0b       	sbc	r31, r25
	mii= mat/1000;
	mat= mat%1000 ;
 39e:	ef 01       	movw	r28, r30
 3a0:	d6 95       	lsr	r29
 3a2:	c7 95       	ror	r28
 3a4:	d6 95       	lsr	r29
 3a6:	c7 95       	ror	r28
 3a8:	d6 95       	lsr	r29
 3aa:	c7 95       	ror	r28
 3ac:	9e 01       	movw	r18, r28
 3ae:	a5 ec       	ldi	r26, 0xC5	; 197
 3b0:	b0 e2       	ldi	r27, 0x20	; 32
 3b2:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 3b6:	ac 01       	movw	r20, r24
 3b8:	52 95       	swap	r21
 3ba:	42 95       	swap	r20
 3bc:	4f 70       	andi	r20, 0x0F	; 15
 3be:	45 27       	eor	r20, r21
 3c0:	5f 70       	andi	r21, 0x0F	; 15
 3c2:	45 27       	eor	r20, r21
 3c4:	28 ee       	ldi	r18, 0xE8	; 232
 3c6:	33 e0       	ldi	r19, 0x03	; 3
 3c8:	42 9f       	mul	r20, r18
 3ca:	c0 01       	movw	r24, r0
 3cc:	43 9f       	mul	r20, r19
 3ce:	90 0d       	add	r25, r0
 3d0:	52 9f       	mul	r21, r18
 3d2:	90 0d       	add	r25, r0
 3d4:	11 24       	eor	r1, r1
 3d6:	af 01       	movw	r20, r30
 3d8:	48 1b       	sub	r20, r24
 3da:	59 0b       	sbc	r21, r25
	c1 = sute + 0x30 ;
	d1 = zeci + 0x30;
	e1 = unitati + 0x30;
	
	//write_inst(locatie); //0xc6
	Caracter_3=b1;
 3dc:	9e 01       	movw	r18, r28
 3de:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 3e2:	92 95       	swap	r25
 3e4:	82 95       	swap	r24
 3e6:	8f 70       	andi	r24, 0x0F	; 15
 3e8:	89 27       	eor	r24, r25
 3ea:	9f 70       	andi	r25, 0x0F	; 15
 3ec:	89 27       	eor	r24, r25
 3ee:	80 5d       	subi	r24, 0xD0	; 208
 3f0:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <Caracter_3>
	Caracter_4=c1;
 3f4:	9a 01       	movw	r18, r20
 3f6:	36 95       	lsr	r19
 3f8:	27 95       	ror	r18
 3fa:	36 95       	lsr	r19
 3fc:	27 95       	ror	r18
 3fe:	ab e7       	ldi	r26, 0x7B	; 123
 400:	b4 e1       	ldi	r27, 0x14	; 20
 402:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 406:	96 95       	lsr	r25
 408:	87 95       	ror	r24
 40a:	20 e3       	ldi	r18, 0x30	; 48
 40c:	28 0f       	add	r18, r24
 40e:	20 93 29 01 	sts	0x0129, r18	; 0x800129 <Caracter_4>
	Caracter_5=d1;
 412:	64 e6       	ldi	r22, 0x64	; 100
 414:	68 9f       	mul	r22, r24
 416:	90 01       	movw	r18, r0
 418:	69 9f       	mul	r22, r25
 41a:	30 0d       	add	r19, r0
 41c:	11 24       	eor	r1, r1
 41e:	ca 01       	movw	r24, r20
 420:	82 1b       	sub	r24, r18
 422:	93 0b       	sbc	r25, r19
 424:	9c 01       	movw	r18, r24
 426:	ad ec       	ldi	r26, 0xCD	; 205
 428:	bc ec       	ldi	r27, 0xCC	; 204
 42a:	0e 94 9a 03 	call	0x734	; 0x734 <__umulhisi3>
 42e:	96 95       	lsr	r25
 430:	87 95       	ror	r24
 432:	96 95       	lsr	r25
 434:	87 95       	ror	r24
 436:	96 95       	lsr	r25
 438:	87 95       	ror	r24
 43a:	80 5d       	subi	r24, 0xD0	; 208
 43c:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <Caracter_5>
	//print_char(e1) ;
	
 440:	df 91       	pop	r29
 442:	cf 91       	pop	r28
 444:	08 95       	ret

00000446 <main>:


int main(void)
{
	
	DDRE= 0xFF ;
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	8d b9       	out	0x0d, r24	; 13
	DDRB= 0xFF ;
 44a:	84 b9       	out	0x04, r24	; 4
	DDRC= 0xFF;
 44c:	87 b9       	out	0x07, r24	; 7
	DDRD= 0xFF ;
 44e:	8a b9       	out	0x0a, r24	; 10
	
    PORTE=0x00;
 450:	1e b8       	out	0x0e, r1	; 14
	PORTB=0x00;
 452:	15 b8       	out	0x05, r1	; 5
	PORTC=0x00;
 454:	18 b8       	out	0x08, r1	; 8
	PORTD=0x00;
 456:	1b b8       	out	0x0b, r1	; 11
	
    init_LCD();
 458:	0e 94 6f 00 	call	0xde	; 0xde <init_LCD>
    //write_inst(0x80);
    //print_string("Atmega32 LCD");
	
	therm_read_temperature(x);
 45c:	8c e0       	ldi	r24, 0x0C	; 12
 45e:	91 e0       	ldi	r25, 0x01	; 1
 460:	0e 94 36 03 	call	0x66c	; 0x66c <therm_read_temperature>
		  int8_t digit;
		  uint16_t decimal;
		  unsigned int local_LSB ;
		  unsigned int local_MSB ;
		  
		 local_LSB=( 0xFF - data_sensor_raw_first_byte )+1 ;
 464:	c1 2c       	mov	r12, r1
 466:	dd 24       	eor	r13, r13
 468:	d3 94       	inc	r13
		 
		 digit=local_LSB>>4;
		 digit|=(local_MSB & 0x7)<<4;
		 decimal=local_LSB & 0xf;
		 decimal*=THERM_DECIMAL_STEPS_12BIT;
			 math(digit); // TEMPERATURA INTREAGA 
 46a:	ee 24       	eor	r14, r14
 46c:	ea 94       	dec	r14
 46e:	f1 2c       	mov	r15, r1
			 math2(decimal); // TEMPERATURA DUPA VIRGULA 
 470:	01 e7       	ldi	r16, 0x71	; 113
 472:	12 e0       	ldi	r17, 0x02	; 2
	
	therm_read_temperature(x);
    while (1) 
    {
		//delay();
		therm_read_temperature(x);
 474:	8c e0       	ldi	r24, 0x0C	; 12
 476:	91 e0       	ldi	r25, 0x01	; 1
 478:	0e 94 36 03 	call	0x66c	; 0x66c <therm_read_temperature>
		if(data_sensor_raw_second_byte > 250)
 47c:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <data_sensor_raw_second_byte>
 480:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <data_sensor_raw_second_byte+0x1>
 484:	8b 3f       	cpi	r24, 0xFB	; 251
 486:	91 05       	cpc	r25, r1
 488:	08 f4       	brcc	.+2      	; 0x48c <main+0x46>
 48a:	53 c0       	rjmp	.+166    	; 0x532 <__stack+0x33>
		  int8_t digit;
		  uint16_t decimal;
		  unsigned int local_LSB ;
		  unsigned int local_MSB ;
		  
		 local_LSB=( 0xFF - data_sensor_raw_first_byte )+1 ;
 48c:	20 91 27 01 	lds	r18, 0x0127	; 0x800127 <data_sensor_raw_first_byte>
 490:	30 91 28 01 	lds	r19, 0x0128	; 0x800128 <data_sensor_raw_first_byte+0x1>
 494:	a6 01       	movw	r20, r12
 496:	42 1b       	sub	r20, r18
 498:	53 0b       	sbc	r21, r19
 49a:	9a 01       	movw	r18, r20
		 local_MSB= 0xFF - data_sensor_raw_second_byte;
		 
		 digit=local_LSB>>4;
		 digit|=(local_MSB & 0x7)<<4;
		 decimal=local_LSB & 0xf;
 49c:	ea 01       	movw	r28, r20
 49e:	cf 70       	andi	r28, 0x0F	; 15
 4a0:	dd 27       	eor	r29, r29
		 decimal*=THERM_DECIMAL_STEPS_12BIT;
			 math(digit); // TEMPERATURA INTREAGA 
 4a2:	a7 01       	movw	r20, r14
 4a4:	48 1b       	sub	r20, r24
 4a6:	59 0b       	sbc	r21, r25
 4a8:	ca 01       	movw	r24, r20
 4aa:	87 70       	andi	r24, 0x07	; 7
 4ac:	82 95       	swap	r24
 4ae:	80 7f       	andi	r24, 0xF0	; 240
 4b0:	32 95       	swap	r19
 4b2:	22 95       	swap	r18
 4b4:	2f 70       	andi	r18, 0x0F	; 15
 4b6:	23 27       	eor	r18, r19
 4b8:	3f 70       	andi	r19, 0x0F	; 15
 4ba:	23 27       	eor	r18, r19
 4bc:	82 2b       	or	r24, r18
 4be:	08 2e       	mov	r0, r24
 4c0:	00 0c       	add	r0, r0
 4c2:	99 0b       	sbc	r25, r25
 4c4:	0e 94 3c 01 	call	0x278	; 0x278 <math>
			 math2(decimal); // TEMPERATURA DUPA VIRGULA 
 4c8:	c0 9f       	mul	r28, r16
 4ca:	c0 01       	movw	r24, r0
 4cc:	c1 9f       	mul	r28, r17
 4ce:	90 0d       	add	r25, r0
 4d0:	d0 9f       	mul	r29, r16
 4d2:	90 0d       	add	r25, r0
 4d4:	11 24       	eor	r1, r1
 4d6:	0e 94 ae 01 	call	0x35c	; 0x35c <math2>
			 write_inst(0xC0);
 4da:	80 ec       	ldi	r24, 0xC0	; 192
 4dc:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
			 print_char('-');
 4e0:	8d e2       	ldi	r24, 0x2D	; 45
 4e2:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
			 print_char(Caracter_1);
 4e6:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <Caracter_1>
 4ea:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
			 print_char(Caracter_2);
 4ee:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <Caracter_2>
 4f2:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
			 print_char('.');
 4f6:	8e e2       	ldi	r24, 0x2E	; 46
 4f8:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
			 print_char(Caracter_3);
 4fc:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <Caracter_3>
 500:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
			 print_char(Caracter_4);
 504:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <Caracter_4>
 508:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
			 print_char(Caracter_5);
 50c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <Caracter_5>
 510:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
			 
			 
			 math_raw(0x89, data_sensor_raw_first_byte);
 514:	60 91 27 01 	lds	r22, 0x0127	; 0x800127 <data_sensor_raw_first_byte>
 518:	70 91 28 01 	lds	r23, 0x0128	; 0x800128 <data_sensor_raw_first_byte+0x1>
 51c:	89 e8       	ldi	r24, 0x89	; 137
 51e:	0e 94 87 00 	call	0x10e	; 0x10e <math_raw>
			   //math_raw(0x89, local_LSB);
			 math_raw(0xc9, data_sensor_raw_second_byte);
 522:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <data_sensor_raw_second_byte>
 526:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <data_sensor_raw_second_byte+0x1>
 52a:	89 ec       	ldi	r24, 0xC9	; 201
 52c:	0e 94 87 00 	call	0x10e	; 0x10e <math_raw>
 530:	a1 cf       	rjmp	.-190    	; 0x474 <main+0x2e>
			   //math_raw(0xc9, local_MSB);
		}
		else {
		math(Temperatura_MSB_8bit);
 532:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <Temperatura_MSB_8bit>
 536:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <Temperatura_MSB_8bit+0x1>
 53a:	0e 94 3c 01 	call	0x278	; 0x278 <math>
		math2(Temperatura_LSB_16bit);
 53e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <Temperatura_LSB_16bit>
 542:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <Temperatura_LSB_16bit+0x1>
 546:	0e 94 ae 01 	call	0x35c	; 0x35c <math2>
		
		write_inst(0xC0);
 54a:	80 ec       	ldi	r24, 0xC0	; 192
 54c:	0e 94 67 00 	call	0xce	; 0xce <write_inst>
		print_char('+');
 550:	8b e2       	ldi	r24, 0x2B	; 43
 552:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
		print_char(Caracter_1);
 556:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <Caracter_1>
 55a:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
		print_char(Caracter_2);
 55e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <Caracter_2>
 562:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
		print_char('.');
 566:	8e e2       	ldi	r24, 0x2E	; 46
 568:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
		print_char(Caracter_3);
 56c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <Caracter_3>
 570:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
		print_char(Caracter_4);
 574:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <Caracter_4>
 578:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
		print_char(Caracter_5);
 57c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <Caracter_5>
 580:	0e 94 84 00 	call	0x108	; 0x108 <print_char>
		
		
		 math_raw(0x89, data_sensor_raw_first_byte);
 584:	60 91 27 01 	lds	r22, 0x0127	; 0x800127 <data_sensor_raw_first_byte>
 588:	70 91 28 01 	lds	r23, 0x0128	; 0x800128 <data_sensor_raw_first_byte+0x1>
 58c:	89 e8       	ldi	r24, 0x89	; 137
 58e:	0e 94 87 00 	call	0x10e	; 0x10e <math_raw>
		
		 math_raw(0xc9, data_sensor_raw_second_byte);
 592:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <data_sensor_raw_second_byte>
 596:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <data_sensor_raw_second_byte+0x1>
 59a:	89 ec       	ldi	r24, 0xC9	; 201
 59c:	0e 94 87 00 	call	0x10e	; 0x10e <math_raw>
 5a0:	69 cf       	rjmp	.-302    	; 0x474 <main+0x2e>

000005a2 <therm_delay>:
	//	}
	//}
}

void delay_ds18b20(unsigned int u_seconds)
{
 5a2:	9c 01       	movw	r18, r24
 5a4:	21 50       	subi	r18, 0x01	; 1
 5a6:	31 09       	sbc	r19, r1
 5a8:	89 2b       	or	r24, r25
 5aa:	21 f0       	breq	.+8      	; 0x5b4 <therm_delay+0x12>
 5ac:	00 00       	nop
 5ae:	21 50       	subi	r18, 0x01	; 1
 5b0:	31 09       	sbc	r19, r1
 5b2:	e0 f7       	brcc	.-8      	; 0x5ac <therm_delay+0xa>
 5b4:	08 95       	ret

000005b6 <therm_reset>:
}
// 250ns x4 = 1uS


uint8_t therm_reset()
{
 5b6:	cf 93       	push	r28
	uint8_t i;
	//Pull line low and wait for 480uS
	
	THERM_OUTPUT_MODE;
 5b8:	50 9a       	sbi	0x0a, 0	; 10
	THERM_LOW;
 5ba:	58 98       	cbi	0x0b, 0	; 11
	therm_delay(us(480));
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	95 e0       	ldi	r25, 0x05	; 5
 5c0:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <therm_delay>
	//delay_ds18b20(480);
	//Release line and wait for 60uS
	THERM_INPUT_MODE;
 5c4:	50 98       	cbi	0x0a, 0	; 10
	therm_delay(us(60));
 5c6:	80 ea       	ldi	r24, 0xA0	; 160
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <therm_delay>
	//delay_ds18b20(60);
	//Store line value and wait until the completion of 480uS period
	i=(THERM_PIN & (1<<THERM_DQ));
 5ce:	c9 b1       	in	r28, 0x09	; 9
	therm_delay(us(420));
 5d0:	80 e6       	ldi	r24, 0x60	; 96
 5d2:	94 e0       	ldi	r25, 0x04	; 4
 5d4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <therm_delay>
	//delay_ds18b20(480);
	//Return the value read from the presence pulse (0=OK, 1=WRONG)
	return i;
}
 5d8:	8c 2f       	mov	r24, r28
 5da:	81 70       	andi	r24, 0x01	; 1
 5dc:	cf 91       	pop	r28
 5de:	08 95       	ret

000005e0 <therm_read_bit>:


uint8_t therm_read_bit(void)
{
 5e0:	cf 93       	push	r28
	uint8_t bit=0;
	//Pull line low for 1uS
	
	THERM_OUTPUT_MODE;
 5e2:	50 9a       	sbi	0x0a, 0	; 10
	THERM_LOW;
 5e4:	58 98       	cbi	0x0b, 0	; 11
	therm_delay(us(1));
 5e6:	82 e0       	ldi	r24, 0x02	; 2
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <therm_delay>
	//delay_ds18b20(1);
	//Release line and wait for 14uS
	THERM_INPUT_MODE;
 5ee:	50 98       	cbi	0x0a, 0	; 10
	therm_delay(us(14));
 5f0:	85 e2       	ldi	r24, 0x25	; 37
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <therm_delay>
	//delay_ds18b20(14);
	//Read line value
	if(THERM_PIN&(1<<THERM_DQ)) bit=1;
 5f8:	c9 b1       	in	r28, 0x09	; 9
	//Wait for 45uS to end and return read value
	therm_delay(us(45));
 5fa:	88 e7       	ldi	r24, 0x78	; 120
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <therm_delay>
	//delay_ds18b20(45);
	return bit;
}
 602:	8c 2f       	mov	r24, r28
 604:	81 70       	andi	r24, 0x01	; 1
 606:	cf 91       	pop	r28
 608:	08 95       	ret

0000060a <therm_read_byte>:


uint8_t therm_read_byte(void)
{
 60a:	cf 93       	push	r28
 60c:	df 93       	push	r29
 60e:	d8 e0       	ldi	r29, 0x08	; 8
	uint8_t i=8, n=0;
 610:	c0 e0       	ldi	r28, 0x00	; 0
	while(i--)
	{
		//Shift one position right and store read value
		n>>=1;
		n|=(therm_read_bit()<<7);
 612:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <therm_read_bit>
 616:	20 e8       	ldi	r18, 0x80	; 128
 618:	82 9f       	mul	r24, r18
 61a:	c0 01       	movw	r24, r0
 61c:	11 24       	eor	r1, r1
 61e:	c6 95       	lsr	r28
 620:	c8 2b       	or	r28, r24
 622:	d1 50       	subi	r29, 0x01	; 1


uint8_t therm_read_byte(void)
{
	uint8_t i=8, n=0;
	while(i--)
 624:	b1 f7       	brne	.-20     	; 0x612 <therm_read_byte+0x8>
		//Shift one position right and store read value
		n>>=1;
		n|=(therm_read_bit()<<7);
	}
	return n;
}
 626:	8c 2f       	mov	r24, r28
 628:	df 91       	pop	r29
 62a:	cf 91       	pop	r28
 62c:	08 95       	ret

0000062e <therm_write_bit>:
	}
}


void therm_write_bit(uint8_t bit)
{
 62e:	cf 93       	push	r28
 630:	c8 2f       	mov	r28, r24
	//Pull line low for 1uS
	
	THERM_OUTPUT_MODE;
 632:	50 9a       	sbi	0x0a, 0	; 10
	THERM_LOW;
 634:	58 98       	cbi	0x0b, 0	; 11
	therm_delay(us(1));
 636:	82 e0       	ldi	r24, 0x02	; 2
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <therm_delay>
	//delay_ds18b20(1);
	//If we want to write 1, release the line (if not will keep low)
	if(bit) THERM_INPUT_MODE;
 63e:	c1 11       	cpse	r28, r1
 640:	50 98       	cbi	0x0a, 0	; 10
	//Wait for 60uS and release the line
	therm_delay(us(60));
 642:	80 ea       	ldi	r24, 0xA0	; 160
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <therm_delay>
	//delay_ds18b20(60);
	THERM_INPUT_MODE;
 64a:	50 98       	cbi	0x0a, 0	; 10
}
 64c:	cf 91       	pop	r28
 64e:	08 95       	ret

00000650 <therm_write_byte>:
	return n;
}


void therm_write_byte(uint8_t byte)
{
 650:	cf 93       	push	r28
 652:	df 93       	push	r29
 654:	d8 2f       	mov	r29, r24
 656:	c8 e0       	ldi	r28, 0x08	; 8
	uint8_t i=8;
	while(i--)
	{
		//Write actual bit and shift one position right to make the next bit ready
		therm_write_bit(byte&1);
 658:	8d 2f       	mov	r24, r29
 65a:	81 70       	andi	r24, 0x01	; 1
 65c:	0e 94 17 03 	call	0x62e	; 0x62e <therm_write_bit>
		byte>>=1;
 660:	d6 95       	lsr	r29
 662:	c1 50       	subi	r28, 0x01	; 1


void therm_write_byte(uint8_t byte)
{
	uint8_t i=8;
	while(i--)
 664:	c9 f7       	brne	.-14     	; 0x658 <therm_write_byte+0x8>
	{
		//Write actual bit and shift one position right to make the next bit ready
		therm_write_bit(byte&1);
		byte>>=1;
	}
}
 666:	df 91       	pop	r29
 668:	cf 91       	pop	r28
 66a:	08 95       	ret

0000066c <therm_read_temperature>:
#include <avr/io.h>
#include "LCD_Code_2x16_serial.h"
#include "therm_ds18b20.h"
//-------------------------------------------------------------------------------------
void therm_read_temperature(char *buffer)
{
 66c:	0f 93       	push	r16
 66e:	1f 93       	push	r17
 670:	cf 93       	push	r28
 672:	df 93       	push	r29
 674:	18 2f       	mov	r17, r24
 676:	09 2f       	mov	r16, r25
	// Buffer length must be at least 12bytes long! ["+XXX.XXXX C"]
	uint8_t temperature[2];
	int8_t digit;
	uint16_t decimal;
	//Reset, skip ROM and start temperature conversion
	therm_reset();
 678:	0e 94 db 02 	call	0x5b6	; 0x5b6 <therm_reset>
	therm_write_byte(THERM_CMD_SKIPROM);
 67c:	8c ec       	ldi	r24, 0xCC	; 204
 67e:	0e 94 28 03 	call	0x650	; 0x650 <therm_write_byte>
	therm_write_byte(THERM_CMD_CONVERTTEMP);
 682:	84 e4       	ldi	r24, 0x44	; 68
 684:	0e 94 28 03 	call	0x650	; 0x650 <therm_write_byte>
	//Wait until conversion is complete
	while(!therm_read_bit());
 688:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <therm_read_bit>
 68c:	88 23       	and	r24, r24
 68e:	e1 f3       	breq	.-8      	; 0x688 <therm_read_temperature+0x1c>
	//Reset, skip ROM and send command to read Scratchpad
	therm_reset();
 690:	0e 94 db 02 	call	0x5b6	; 0x5b6 <therm_reset>
	therm_write_byte(THERM_CMD_SKIPROM);
 694:	8c ec       	ldi	r24, 0xCC	; 204
 696:	0e 94 28 03 	call	0x650	; 0x650 <therm_write_byte>
	therm_write_byte(THERM_CMD_RSCRATCHPAD);
 69a:	8e eb       	ldi	r24, 0xBE	; 190
 69c:	0e 94 28 03 	call	0x650	; 0x650 <therm_write_byte>
	//Read Scratchpad (only 2 first bytes)
	temperature[0]=therm_read_byte();
 6a0:	0e 94 05 03 	call	0x60a	; 0x60a <therm_read_byte>
 6a4:	d8 2f       	mov	r29, r24
	temperature[1]=therm_read_byte();
 6a6:	0e 94 05 03 	call	0x60a	; 0x60a <therm_read_byte>
 6aa:	c8 2f       	mov	r28, r24
	therm_reset();
 6ac:	0e 94 db 02 	call	0x5b6	; 0x5b6 <therm_reset>
	
	data_sensor_raw_first_byte = temperature[0];
 6b0:	8d 2f       	mov	r24, r29
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	90 93 28 01 	sts	0x0128, r25	; 0x800128 <data_sensor_raw_first_byte+0x1>
 6b8:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <data_sensor_raw_first_byte>
	data_sensor_raw_second_byte = temperature[1];
 6bc:	8c 2f       	mov	r24, r28
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <data_sensor_raw_second_byte+0x1>
 6c4:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <data_sensor_raw_second_byte>
	//Store temperature integer digits and decimal digits
	digit=temperature[0]>>4;
 6c8:	2d 2f       	mov	r18, r29
 6ca:	22 95       	swap	r18
 6cc:	2f 70       	andi	r18, 0x0F	; 15
	digit|=(temperature[1]&0x7)<<4;
 6ce:	c7 70       	andi	r28, 0x07	; 7
 6d0:	30 e1       	ldi	r19, 0x10	; 16
 6d2:	c3 9f       	mul	r28, r19
 6d4:	c0 01       	movw	r24, r0
 6d6:	11 24       	eor	r1, r1
 6d8:	82 2b       	or	r24, r18
	//Store decimal digits
	decimal=temperature[0]&0xf;
 6da:	df 70       	andi	r29, 0x0F	; 15
	decimal*=THERM_DECIMAL_STEPS_12BIT;
 6dc:	41 e7       	ldi	r20, 0x71	; 113
 6de:	52 e0       	ldi	r21, 0x02	; 2
 6e0:	d4 9f       	mul	r29, r20
 6e2:	90 01       	movw	r18, r0
 6e4:	d5 9f       	mul	r29, r21
 6e6:	30 0d       	add	r19, r0
 6e8:	11 24       	eor	r1, r1
	
	Temperatura_MSB_8bit=digit;
 6ea:	48 2f       	mov	r20, r24
 6ec:	08 2e       	mov	r0, r24
 6ee:	00 0c       	add	r0, r0
 6f0:	55 0b       	sbc	r21, r21
 6f2:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <Temperatura_MSB_8bit+0x1>
 6f6:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <Temperatura_MSB_8bit>
	Temperatura_LSB_16bit=decimal;
 6fa:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <Temperatura_LSB_16bit+0x1>
 6fe:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <Temperatura_LSB_16bit>
	//Format temperature into a string [+XXX.XXXX C]
	sprintf(buffer, "%+d.%04u C", digit, decimal);
 702:	3f 93       	push	r19
 704:	2f 93       	push	r18
 706:	5f 93       	push	r21
 708:	8f 93       	push	r24
 70a:	80 e0       	ldi	r24, 0x00	; 0
 70c:	91 e0       	ldi	r25, 0x01	; 1
 70e:	9f 93       	push	r25
 710:	8f 93       	push	r24
 712:	0f 93       	push	r16
 714:	1f 93       	push	r17
 716:	0e 94 a9 03 	call	0x752	; 0x752 <sprintf>
}
 71a:	8d b7       	in	r24, 0x3d	; 61
 71c:	9e b7       	in	r25, 0x3e	; 62
 71e:	08 96       	adiw	r24, 0x08	; 8
 720:	0f b6       	in	r0, 0x3f	; 63
 722:	f8 94       	cli
 724:	9e bf       	out	0x3e, r25	; 62
 726:	0f be       	out	0x3f, r0	; 63
 728:	8d bf       	out	0x3d, r24	; 61
 72a:	df 91       	pop	r29
 72c:	cf 91       	pop	r28
 72e:	1f 91       	pop	r17
 730:	0f 91       	pop	r16
 732:	08 95       	ret

00000734 <__umulhisi3>:
 734:	a2 9f       	mul	r26, r18
 736:	b0 01       	movw	r22, r0
 738:	b3 9f       	mul	r27, r19
 73a:	c0 01       	movw	r24, r0
 73c:	a3 9f       	mul	r26, r19
 73e:	70 0d       	add	r23, r0
 740:	81 1d       	adc	r24, r1
 742:	11 24       	eor	r1, r1
 744:	91 1d       	adc	r25, r1
 746:	b2 9f       	mul	r27, r18
 748:	70 0d       	add	r23, r0
 74a:	81 1d       	adc	r24, r1
 74c:	11 24       	eor	r1, r1
 74e:	91 1d       	adc	r25, r1
 750:	08 95       	ret

00000752 <sprintf>:
 752:	ae e0       	ldi	r26, 0x0E	; 14
 754:	b0 e0       	ldi	r27, 0x00	; 0
 756:	ef ea       	ldi	r30, 0xAF	; 175
 758:	f3 e0       	ldi	r31, 0x03	; 3
 75a:	0c 94 6a 06 	jmp	0xcd4	; 0xcd4 <__prologue_saves__+0x1c>
 75e:	0d 89       	ldd	r16, Y+21	; 0x15
 760:	1e 89       	ldd	r17, Y+22	; 0x16
 762:	86 e0       	ldi	r24, 0x06	; 6
 764:	8c 83       	std	Y+4, r24	; 0x04
 766:	1a 83       	std	Y+2, r17	; 0x02
 768:	09 83       	std	Y+1, r16	; 0x01
 76a:	8f ef       	ldi	r24, 0xFF	; 255
 76c:	9f e7       	ldi	r25, 0x7F	; 127
 76e:	9e 83       	std	Y+6, r25	; 0x06
 770:	8d 83       	std	Y+5, r24	; 0x05
 772:	ae 01       	movw	r20, r28
 774:	47 5e       	subi	r20, 0xE7	; 231
 776:	5f 4f       	sbci	r21, 0xFF	; 255
 778:	6f 89       	ldd	r22, Y+23	; 0x17
 77a:	78 8d       	ldd	r23, Y+24	; 0x18
 77c:	ce 01       	movw	r24, r28
 77e:	01 96       	adiw	r24, 0x01	; 1
 780:	0e 94 cb 03 	call	0x796	; 0x796 <vfprintf>
 784:	ef 81       	ldd	r30, Y+7	; 0x07
 786:	f8 85       	ldd	r31, Y+8	; 0x08
 788:	e0 0f       	add	r30, r16
 78a:	f1 1f       	adc	r31, r17
 78c:	10 82       	st	Z, r1
 78e:	2e 96       	adiw	r28, 0x0e	; 14
 790:	e4 e0       	ldi	r30, 0x04	; 4
 792:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__epilogue_restores__+0x1c>

00000796 <vfprintf>:
 796:	ab e0       	ldi	r26, 0x0B	; 11
 798:	b0 e0       	ldi	r27, 0x00	; 0
 79a:	e1 ed       	ldi	r30, 0xD1	; 209
 79c:	f3 e0       	ldi	r31, 0x03	; 3
 79e:	0c 94 5c 06 	jmp	0xcb8	; 0xcb8 <__prologue_saves__>
 7a2:	6c 01       	movw	r12, r24
 7a4:	7b 01       	movw	r14, r22
 7a6:	8a 01       	movw	r16, r20
 7a8:	fc 01       	movw	r30, r24
 7aa:	17 82       	std	Z+7, r1	; 0x07
 7ac:	16 82       	std	Z+6, r1	; 0x06
 7ae:	83 81       	ldd	r24, Z+3	; 0x03
 7b0:	81 ff       	sbrs	r24, 1
 7b2:	cc c1       	rjmp	.+920    	; 0xb4c <vfprintf+0x3b6>
 7b4:	ce 01       	movw	r24, r28
 7b6:	01 96       	adiw	r24, 0x01	; 1
 7b8:	3c 01       	movw	r6, r24
 7ba:	f6 01       	movw	r30, r12
 7bc:	93 81       	ldd	r25, Z+3	; 0x03
 7be:	f7 01       	movw	r30, r14
 7c0:	93 fd       	sbrc	r25, 3
 7c2:	85 91       	lpm	r24, Z+
 7c4:	93 ff       	sbrs	r25, 3
 7c6:	81 91       	ld	r24, Z+
 7c8:	7f 01       	movw	r14, r30
 7ca:	88 23       	and	r24, r24
 7cc:	09 f4       	brne	.+2      	; 0x7d0 <vfprintf+0x3a>
 7ce:	ba c1       	rjmp	.+884    	; 0xb44 <vfprintf+0x3ae>
 7d0:	85 32       	cpi	r24, 0x25	; 37
 7d2:	39 f4       	brne	.+14     	; 0x7e2 <vfprintf+0x4c>
 7d4:	93 fd       	sbrc	r25, 3
 7d6:	85 91       	lpm	r24, Z+
 7d8:	93 ff       	sbrs	r25, 3
 7da:	81 91       	ld	r24, Z+
 7dc:	7f 01       	movw	r14, r30
 7de:	85 32       	cpi	r24, 0x25	; 37
 7e0:	29 f4       	brne	.+10     	; 0x7ec <vfprintf+0x56>
 7e2:	b6 01       	movw	r22, r12
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 7ea:	e7 cf       	rjmp	.-50     	; 0x7ba <vfprintf+0x24>
 7ec:	91 2c       	mov	r9, r1
 7ee:	21 2c       	mov	r2, r1
 7f0:	31 2c       	mov	r3, r1
 7f2:	ff e1       	ldi	r31, 0x1F	; 31
 7f4:	f3 15       	cp	r31, r3
 7f6:	d8 f0       	brcs	.+54     	; 0x82e <vfprintf+0x98>
 7f8:	8b 32       	cpi	r24, 0x2B	; 43
 7fa:	79 f0       	breq	.+30     	; 0x81a <vfprintf+0x84>
 7fc:	38 f4       	brcc	.+14     	; 0x80c <vfprintf+0x76>
 7fe:	80 32       	cpi	r24, 0x20	; 32
 800:	79 f0       	breq	.+30     	; 0x820 <vfprintf+0x8a>
 802:	83 32       	cpi	r24, 0x23	; 35
 804:	a1 f4       	brne	.+40     	; 0x82e <vfprintf+0x98>
 806:	23 2d       	mov	r18, r3
 808:	20 61       	ori	r18, 0x10	; 16
 80a:	1d c0       	rjmp	.+58     	; 0x846 <vfprintf+0xb0>
 80c:	8d 32       	cpi	r24, 0x2D	; 45
 80e:	61 f0       	breq	.+24     	; 0x828 <vfprintf+0x92>
 810:	80 33       	cpi	r24, 0x30	; 48
 812:	69 f4       	brne	.+26     	; 0x82e <vfprintf+0x98>
 814:	23 2d       	mov	r18, r3
 816:	21 60       	ori	r18, 0x01	; 1
 818:	16 c0       	rjmp	.+44     	; 0x846 <vfprintf+0xb0>
 81a:	83 2d       	mov	r24, r3
 81c:	82 60       	ori	r24, 0x02	; 2
 81e:	38 2e       	mov	r3, r24
 820:	e3 2d       	mov	r30, r3
 822:	e4 60       	ori	r30, 0x04	; 4
 824:	3e 2e       	mov	r3, r30
 826:	2a c0       	rjmp	.+84     	; 0x87c <vfprintf+0xe6>
 828:	f3 2d       	mov	r31, r3
 82a:	f8 60       	ori	r31, 0x08	; 8
 82c:	1d c0       	rjmp	.+58     	; 0x868 <vfprintf+0xd2>
 82e:	37 fc       	sbrc	r3, 7
 830:	2d c0       	rjmp	.+90     	; 0x88c <vfprintf+0xf6>
 832:	20 ed       	ldi	r18, 0xD0	; 208
 834:	28 0f       	add	r18, r24
 836:	2a 30       	cpi	r18, 0x0A	; 10
 838:	40 f0       	brcs	.+16     	; 0x84a <vfprintf+0xb4>
 83a:	8e 32       	cpi	r24, 0x2E	; 46
 83c:	b9 f4       	brne	.+46     	; 0x86c <vfprintf+0xd6>
 83e:	36 fc       	sbrc	r3, 6
 840:	81 c1       	rjmp	.+770    	; 0xb44 <vfprintf+0x3ae>
 842:	23 2d       	mov	r18, r3
 844:	20 64       	ori	r18, 0x40	; 64
 846:	32 2e       	mov	r3, r18
 848:	19 c0       	rjmp	.+50     	; 0x87c <vfprintf+0xe6>
 84a:	36 fe       	sbrs	r3, 6
 84c:	06 c0       	rjmp	.+12     	; 0x85a <vfprintf+0xc4>
 84e:	8a e0       	ldi	r24, 0x0A	; 10
 850:	98 9e       	mul	r9, r24
 852:	20 0d       	add	r18, r0
 854:	11 24       	eor	r1, r1
 856:	92 2e       	mov	r9, r18
 858:	11 c0       	rjmp	.+34     	; 0x87c <vfprintf+0xe6>
 85a:	ea e0       	ldi	r30, 0x0A	; 10
 85c:	2e 9e       	mul	r2, r30
 85e:	20 0d       	add	r18, r0
 860:	11 24       	eor	r1, r1
 862:	22 2e       	mov	r2, r18
 864:	f3 2d       	mov	r31, r3
 866:	f0 62       	ori	r31, 0x20	; 32
 868:	3f 2e       	mov	r3, r31
 86a:	08 c0       	rjmp	.+16     	; 0x87c <vfprintf+0xe6>
 86c:	8c 36       	cpi	r24, 0x6C	; 108
 86e:	21 f4       	brne	.+8      	; 0x878 <vfprintf+0xe2>
 870:	83 2d       	mov	r24, r3
 872:	80 68       	ori	r24, 0x80	; 128
 874:	38 2e       	mov	r3, r24
 876:	02 c0       	rjmp	.+4      	; 0x87c <vfprintf+0xe6>
 878:	88 36       	cpi	r24, 0x68	; 104
 87a:	41 f4       	brne	.+16     	; 0x88c <vfprintf+0xf6>
 87c:	f7 01       	movw	r30, r14
 87e:	93 fd       	sbrc	r25, 3
 880:	85 91       	lpm	r24, Z+
 882:	93 ff       	sbrs	r25, 3
 884:	81 91       	ld	r24, Z+
 886:	7f 01       	movw	r14, r30
 888:	81 11       	cpse	r24, r1
 88a:	b3 cf       	rjmp	.-154    	; 0x7f2 <vfprintf+0x5c>
 88c:	98 2f       	mov	r25, r24
 88e:	9f 7d       	andi	r25, 0xDF	; 223
 890:	95 54       	subi	r25, 0x45	; 69
 892:	93 30       	cpi	r25, 0x03	; 3
 894:	28 f4       	brcc	.+10     	; 0x8a0 <vfprintf+0x10a>
 896:	0c 5f       	subi	r16, 0xFC	; 252
 898:	1f 4f       	sbci	r17, 0xFF	; 255
 89a:	9f e3       	ldi	r25, 0x3F	; 63
 89c:	99 83       	std	Y+1, r25	; 0x01
 89e:	0d c0       	rjmp	.+26     	; 0x8ba <vfprintf+0x124>
 8a0:	83 36       	cpi	r24, 0x63	; 99
 8a2:	31 f0       	breq	.+12     	; 0x8b0 <vfprintf+0x11a>
 8a4:	83 37       	cpi	r24, 0x73	; 115
 8a6:	71 f0       	breq	.+28     	; 0x8c4 <vfprintf+0x12e>
 8a8:	83 35       	cpi	r24, 0x53	; 83
 8aa:	09 f0       	breq	.+2      	; 0x8ae <vfprintf+0x118>
 8ac:	59 c0       	rjmp	.+178    	; 0x960 <vfprintf+0x1ca>
 8ae:	21 c0       	rjmp	.+66     	; 0x8f2 <vfprintf+0x15c>
 8b0:	f8 01       	movw	r30, r16
 8b2:	80 81       	ld	r24, Z
 8b4:	89 83       	std	Y+1, r24	; 0x01
 8b6:	0e 5f       	subi	r16, 0xFE	; 254
 8b8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ba:	88 24       	eor	r8, r8
 8bc:	83 94       	inc	r8
 8be:	91 2c       	mov	r9, r1
 8c0:	53 01       	movw	r10, r6
 8c2:	13 c0       	rjmp	.+38     	; 0x8ea <vfprintf+0x154>
 8c4:	28 01       	movw	r4, r16
 8c6:	f2 e0       	ldi	r31, 0x02	; 2
 8c8:	4f 0e       	add	r4, r31
 8ca:	51 1c       	adc	r5, r1
 8cc:	f8 01       	movw	r30, r16
 8ce:	a0 80       	ld	r10, Z
 8d0:	b1 80       	ldd	r11, Z+1	; 0x01
 8d2:	36 fe       	sbrs	r3, 6
 8d4:	03 c0       	rjmp	.+6      	; 0x8dc <vfprintf+0x146>
 8d6:	69 2d       	mov	r22, r9
 8d8:	70 e0       	ldi	r23, 0x00	; 0
 8da:	02 c0       	rjmp	.+4      	; 0x8e0 <vfprintf+0x14a>
 8dc:	6f ef       	ldi	r22, 0xFF	; 255
 8de:	7f ef       	ldi	r23, 0xFF	; 255
 8e0:	c5 01       	movw	r24, r10
 8e2:	0e 94 b7 05 	call	0xb6e	; 0xb6e <strnlen>
 8e6:	4c 01       	movw	r8, r24
 8e8:	82 01       	movw	r16, r4
 8ea:	f3 2d       	mov	r31, r3
 8ec:	ff 77       	andi	r31, 0x7F	; 127
 8ee:	3f 2e       	mov	r3, r31
 8f0:	16 c0       	rjmp	.+44     	; 0x91e <vfprintf+0x188>
 8f2:	28 01       	movw	r4, r16
 8f4:	22 e0       	ldi	r18, 0x02	; 2
 8f6:	42 0e       	add	r4, r18
 8f8:	51 1c       	adc	r5, r1
 8fa:	f8 01       	movw	r30, r16
 8fc:	a0 80       	ld	r10, Z
 8fe:	b1 80       	ldd	r11, Z+1	; 0x01
 900:	36 fe       	sbrs	r3, 6
 902:	03 c0       	rjmp	.+6      	; 0x90a <vfprintf+0x174>
 904:	69 2d       	mov	r22, r9
 906:	70 e0       	ldi	r23, 0x00	; 0
 908:	02 c0       	rjmp	.+4      	; 0x90e <vfprintf+0x178>
 90a:	6f ef       	ldi	r22, 0xFF	; 255
 90c:	7f ef       	ldi	r23, 0xFF	; 255
 90e:	c5 01       	movw	r24, r10
 910:	0e 94 ac 05 	call	0xb58	; 0xb58 <strnlen_P>
 914:	4c 01       	movw	r8, r24
 916:	f3 2d       	mov	r31, r3
 918:	f0 68       	ori	r31, 0x80	; 128
 91a:	3f 2e       	mov	r3, r31
 91c:	82 01       	movw	r16, r4
 91e:	33 fc       	sbrc	r3, 3
 920:	1b c0       	rjmp	.+54     	; 0x958 <vfprintf+0x1c2>
 922:	82 2d       	mov	r24, r2
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	88 16       	cp	r8, r24
 928:	99 06       	cpc	r9, r25
 92a:	b0 f4       	brcc	.+44     	; 0x958 <vfprintf+0x1c2>
 92c:	b6 01       	movw	r22, r12
 92e:	80 e2       	ldi	r24, 0x20	; 32
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 936:	2a 94       	dec	r2
 938:	f4 cf       	rjmp	.-24     	; 0x922 <vfprintf+0x18c>
 93a:	f5 01       	movw	r30, r10
 93c:	37 fc       	sbrc	r3, 7
 93e:	85 91       	lpm	r24, Z+
 940:	37 fe       	sbrs	r3, 7
 942:	81 91       	ld	r24, Z+
 944:	5f 01       	movw	r10, r30
 946:	b6 01       	movw	r22, r12
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 94e:	21 10       	cpse	r2, r1
 950:	2a 94       	dec	r2
 952:	21 e0       	ldi	r18, 0x01	; 1
 954:	82 1a       	sub	r8, r18
 956:	91 08       	sbc	r9, r1
 958:	81 14       	cp	r8, r1
 95a:	91 04       	cpc	r9, r1
 95c:	71 f7       	brne	.-36     	; 0x93a <vfprintf+0x1a4>
 95e:	e8 c0       	rjmp	.+464    	; 0xb30 <vfprintf+0x39a>
 960:	84 36       	cpi	r24, 0x64	; 100
 962:	11 f0       	breq	.+4      	; 0x968 <vfprintf+0x1d2>
 964:	89 36       	cpi	r24, 0x69	; 105
 966:	41 f5       	brne	.+80     	; 0x9b8 <vfprintf+0x222>
 968:	f8 01       	movw	r30, r16
 96a:	37 fe       	sbrs	r3, 7
 96c:	07 c0       	rjmp	.+14     	; 0x97c <vfprintf+0x1e6>
 96e:	60 81       	ld	r22, Z
 970:	71 81       	ldd	r23, Z+1	; 0x01
 972:	82 81       	ldd	r24, Z+2	; 0x02
 974:	93 81       	ldd	r25, Z+3	; 0x03
 976:	0c 5f       	subi	r16, 0xFC	; 252
 978:	1f 4f       	sbci	r17, 0xFF	; 255
 97a:	08 c0       	rjmp	.+16     	; 0x98c <vfprintf+0x1f6>
 97c:	60 81       	ld	r22, Z
 97e:	71 81       	ldd	r23, Z+1	; 0x01
 980:	07 2e       	mov	r0, r23
 982:	00 0c       	add	r0, r0
 984:	88 0b       	sbc	r24, r24
 986:	99 0b       	sbc	r25, r25
 988:	0e 5f       	subi	r16, 0xFE	; 254
 98a:	1f 4f       	sbci	r17, 0xFF	; 255
 98c:	f3 2d       	mov	r31, r3
 98e:	ff 76       	andi	r31, 0x6F	; 111
 990:	3f 2e       	mov	r3, r31
 992:	97 ff       	sbrs	r25, 7
 994:	09 c0       	rjmp	.+18     	; 0x9a8 <vfprintf+0x212>
 996:	90 95       	com	r25
 998:	80 95       	com	r24
 99a:	70 95       	com	r23
 99c:	61 95       	neg	r22
 99e:	7f 4f       	sbci	r23, 0xFF	; 255
 9a0:	8f 4f       	sbci	r24, 0xFF	; 255
 9a2:	9f 4f       	sbci	r25, 0xFF	; 255
 9a4:	f0 68       	ori	r31, 0x80	; 128
 9a6:	3f 2e       	mov	r3, r31
 9a8:	2a e0       	ldi	r18, 0x0A	; 10
 9aa:	30 e0       	ldi	r19, 0x00	; 0
 9ac:	a3 01       	movw	r20, r6
 9ae:	0e 94 fe 05 	call	0xbfc	; 0xbfc <__ultoa_invert>
 9b2:	88 2e       	mov	r8, r24
 9b4:	86 18       	sub	r8, r6
 9b6:	45 c0       	rjmp	.+138    	; 0xa42 <vfprintf+0x2ac>
 9b8:	85 37       	cpi	r24, 0x75	; 117
 9ba:	31 f4       	brne	.+12     	; 0x9c8 <vfprintf+0x232>
 9bc:	23 2d       	mov	r18, r3
 9be:	2f 7e       	andi	r18, 0xEF	; 239
 9c0:	b2 2e       	mov	r11, r18
 9c2:	2a e0       	ldi	r18, 0x0A	; 10
 9c4:	30 e0       	ldi	r19, 0x00	; 0
 9c6:	25 c0       	rjmp	.+74     	; 0xa12 <vfprintf+0x27c>
 9c8:	93 2d       	mov	r25, r3
 9ca:	99 7f       	andi	r25, 0xF9	; 249
 9cc:	b9 2e       	mov	r11, r25
 9ce:	8f 36       	cpi	r24, 0x6F	; 111
 9d0:	c1 f0       	breq	.+48     	; 0xa02 <vfprintf+0x26c>
 9d2:	18 f4       	brcc	.+6      	; 0x9da <vfprintf+0x244>
 9d4:	88 35       	cpi	r24, 0x58	; 88
 9d6:	79 f0       	breq	.+30     	; 0x9f6 <vfprintf+0x260>
 9d8:	b5 c0       	rjmp	.+362    	; 0xb44 <vfprintf+0x3ae>
 9da:	80 37       	cpi	r24, 0x70	; 112
 9dc:	19 f0       	breq	.+6      	; 0x9e4 <vfprintf+0x24e>
 9de:	88 37       	cpi	r24, 0x78	; 120
 9e0:	21 f0       	breq	.+8      	; 0x9ea <vfprintf+0x254>
 9e2:	b0 c0       	rjmp	.+352    	; 0xb44 <vfprintf+0x3ae>
 9e4:	e9 2f       	mov	r30, r25
 9e6:	e0 61       	ori	r30, 0x10	; 16
 9e8:	be 2e       	mov	r11, r30
 9ea:	b4 fe       	sbrs	r11, 4
 9ec:	0d c0       	rjmp	.+26     	; 0xa08 <vfprintf+0x272>
 9ee:	fb 2d       	mov	r31, r11
 9f0:	f4 60       	ori	r31, 0x04	; 4
 9f2:	bf 2e       	mov	r11, r31
 9f4:	09 c0       	rjmp	.+18     	; 0xa08 <vfprintf+0x272>
 9f6:	34 fe       	sbrs	r3, 4
 9f8:	0a c0       	rjmp	.+20     	; 0xa0e <vfprintf+0x278>
 9fa:	29 2f       	mov	r18, r25
 9fc:	26 60       	ori	r18, 0x06	; 6
 9fe:	b2 2e       	mov	r11, r18
 a00:	06 c0       	rjmp	.+12     	; 0xa0e <vfprintf+0x278>
 a02:	28 e0       	ldi	r18, 0x08	; 8
 a04:	30 e0       	ldi	r19, 0x00	; 0
 a06:	05 c0       	rjmp	.+10     	; 0xa12 <vfprintf+0x27c>
 a08:	20 e1       	ldi	r18, 0x10	; 16
 a0a:	30 e0       	ldi	r19, 0x00	; 0
 a0c:	02 c0       	rjmp	.+4      	; 0xa12 <vfprintf+0x27c>
 a0e:	20 e1       	ldi	r18, 0x10	; 16
 a10:	32 e0       	ldi	r19, 0x02	; 2
 a12:	f8 01       	movw	r30, r16
 a14:	b7 fe       	sbrs	r11, 7
 a16:	07 c0       	rjmp	.+14     	; 0xa26 <vfprintf+0x290>
 a18:	60 81       	ld	r22, Z
 a1a:	71 81       	ldd	r23, Z+1	; 0x01
 a1c:	82 81       	ldd	r24, Z+2	; 0x02
 a1e:	93 81       	ldd	r25, Z+3	; 0x03
 a20:	0c 5f       	subi	r16, 0xFC	; 252
 a22:	1f 4f       	sbci	r17, 0xFF	; 255
 a24:	06 c0       	rjmp	.+12     	; 0xa32 <vfprintf+0x29c>
 a26:	60 81       	ld	r22, Z
 a28:	71 81       	ldd	r23, Z+1	; 0x01
 a2a:	80 e0       	ldi	r24, 0x00	; 0
 a2c:	90 e0       	ldi	r25, 0x00	; 0
 a2e:	0e 5f       	subi	r16, 0xFE	; 254
 a30:	1f 4f       	sbci	r17, 0xFF	; 255
 a32:	a3 01       	movw	r20, r6
 a34:	0e 94 fe 05 	call	0xbfc	; 0xbfc <__ultoa_invert>
 a38:	88 2e       	mov	r8, r24
 a3a:	86 18       	sub	r8, r6
 a3c:	fb 2d       	mov	r31, r11
 a3e:	ff 77       	andi	r31, 0x7F	; 127
 a40:	3f 2e       	mov	r3, r31
 a42:	36 fe       	sbrs	r3, 6
 a44:	0d c0       	rjmp	.+26     	; 0xa60 <vfprintf+0x2ca>
 a46:	23 2d       	mov	r18, r3
 a48:	2e 7f       	andi	r18, 0xFE	; 254
 a4a:	a2 2e       	mov	r10, r18
 a4c:	89 14       	cp	r8, r9
 a4e:	58 f4       	brcc	.+22     	; 0xa66 <vfprintf+0x2d0>
 a50:	34 fe       	sbrs	r3, 4
 a52:	0b c0       	rjmp	.+22     	; 0xa6a <vfprintf+0x2d4>
 a54:	32 fc       	sbrc	r3, 2
 a56:	09 c0       	rjmp	.+18     	; 0xa6a <vfprintf+0x2d4>
 a58:	83 2d       	mov	r24, r3
 a5a:	8e 7e       	andi	r24, 0xEE	; 238
 a5c:	a8 2e       	mov	r10, r24
 a5e:	05 c0       	rjmp	.+10     	; 0xa6a <vfprintf+0x2d4>
 a60:	b8 2c       	mov	r11, r8
 a62:	a3 2c       	mov	r10, r3
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <vfprintf+0x2d6>
 a66:	b8 2c       	mov	r11, r8
 a68:	01 c0       	rjmp	.+2      	; 0xa6c <vfprintf+0x2d6>
 a6a:	b9 2c       	mov	r11, r9
 a6c:	a4 fe       	sbrs	r10, 4
 a6e:	0f c0       	rjmp	.+30     	; 0xa8e <vfprintf+0x2f8>
 a70:	fe 01       	movw	r30, r28
 a72:	e8 0d       	add	r30, r8
 a74:	f1 1d       	adc	r31, r1
 a76:	80 81       	ld	r24, Z
 a78:	80 33       	cpi	r24, 0x30	; 48
 a7a:	21 f4       	brne	.+8      	; 0xa84 <vfprintf+0x2ee>
 a7c:	9a 2d       	mov	r25, r10
 a7e:	99 7e       	andi	r25, 0xE9	; 233
 a80:	a9 2e       	mov	r10, r25
 a82:	09 c0       	rjmp	.+18     	; 0xa96 <vfprintf+0x300>
 a84:	a2 fe       	sbrs	r10, 2
 a86:	06 c0       	rjmp	.+12     	; 0xa94 <vfprintf+0x2fe>
 a88:	b3 94       	inc	r11
 a8a:	b3 94       	inc	r11
 a8c:	04 c0       	rjmp	.+8      	; 0xa96 <vfprintf+0x300>
 a8e:	8a 2d       	mov	r24, r10
 a90:	86 78       	andi	r24, 0x86	; 134
 a92:	09 f0       	breq	.+2      	; 0xa96 <vfprintf+0x300>
 a94:	b3 94       	inc	r11
 a96:	a3 fc       	sbrc	r10, 3
 a98:	11 c0       	rjmp	.+34     	; 0xabc <vfprintf+0x326>
 a9a:	a0 fe       	sbrs	r10, 0
 a9c:	06 c0       	rjmp	.+12     	; 0xaaa <vfprintf+0x314>
 a9e:	b2 14       	cp	r11, r2
 aa0:	88 f4       	brcc	.+34     	; 0xac4 <vfprintf+0x32e>
 aa2:	28 0c       	add	r2, r8
 aa4:	92 2c       	mov	r9, r2
 aa6:	9b 18       	sub	r9, r11
 aa8:	0e c0       	rjmp	.+28     	; 0xac6 <vfprintf+0x330>
 aaa:	b2 14       	cp	r11, r2
 aac:	60 f4       	brcc	.+24     	; 0xac6 <vfprintf+0x330>
 aae:	b6 01       	movw	r22, r12
 ab0:	80 e2       	ldi	r24, 0x20	; 32
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 ab8:	b3 94       	inc	r11
 aba:	f7 cf       	rjmp	.-18     	; 0xaaa <vfprintf+0x314>
 abc:	b2 14       	cp	r11, r2
 abe:	18 f4       	brcc	.+6      	; 0xac6 <vfprintf+0x330>
 ac0:	2b 18       	sub	r2, r11
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <vfprintf+0x332>
 ac4:	98 2c       	mov	r9, r8
 ac6:	21 2c       	mov	r2, r1
 ac8:	a4 fe       	sbrs	r10, 4
 aca:	10 c0       	rjmp	.+32     	; 0xaec <vfprintf+0x356>
 acc:	b6 01       	movw	r22, r12
 ace:	80 e3       	ldi	r24, 0x30	; 48
 ad0:	90 e0       	ldi	r25, 0x00	; 0
 ad2:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 ad6:	a2 fe       	sbrs	r10, 2
 ad8:	17 c0       	rjmp	.+46     	; 0xb08 <vfprintf+0x372>
 ada:	a1 fc       	sbrc	r10, 1
 adc:	03 c0       	rjmp	.+6      	; 0xae4 <vfprintf+0x34e>
 ade:	88 e7       	ldi	r24, 0x78	; 120
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	02 c0       	rjmp	.+4      	; 0xae8 <vfprintf+0x352>
 ae4:	88 e5       	ldi	r24, 0x58	; 88
 ae6:	90 e0       	ldi	r25, 0x00	; 0
 ae8:	b6 01       	movw	r22, r12
 aea:	0c c0       	rjmp	.+24     	; 0xb04 <vfprintf+0x36e>
 aec:	8a 2d       	mov	r24, r10
 aee:	86 78       	andi	r24, 0x86	; 134
 af0:	59 f0       	breq	.+22     	; 0xb08 <vfprintf+0x372>
 af2:	a1 fe       	sbrs	r10, 1
 af4:	02 c0       	rjmp	.+4      	; 0xafa <vfprintf+0x364>
 af6:	8b e2       	ldi	r24, 0x2B	; 43
 af8:	01 c0       	rjmp	.+2      	; 0xafc <vfprintf+0x366>
 afa:	80 e2       	ldi	r24, 0x20	; 32
 afc:	a7 fc       	sbrc	r10, 7
 afe:	8d e2       	ldi	r24, 0x2D	; 45
 b00:	b6 01       	movw	r22, r12
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 b08:	89 14       	cp	r8, r9
 b0a:	38 f4       	brcc	.+14     	; 0xb1a <vfprintf+0x384>
 b0c:	b6 01       	movw	r22, r12
 b0e:	80 e3       	ldi	r24, 0x30	; 48
 b10:	90 e0       	ldi	r25, 0x00	; 0
 b12:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 b16:	9a 94       	dec	r9
 b18:	f7 cf       	rjmp	.-18     	; 0xb08 <vfprintf+0x372>
 b1a:	8a 94       	dec	r8
 b1c:	f3 01       	movw	r30, r6
 b1e:	e8 0d       	add	r30, r8
 b20:	f1 1d       	adc	r31, r1
 b22:	80 81       	ld	r24, Z
 b24:	b6 01       	movw	r22, r12
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 b2c:	81 10       	cpse	r8, r1
 b2e:	f5 cf       	rjmp	.-22     	; 0xb1a <vfprintf+0x384>
 b30:	22 20       	and	r2, r2
 b32:	09 f4       	brne	.+2      	; 0xb36 <vfprintf+0x3a0>
 b34:	42 ce       	rjmp	.-892    	; 0x7ba <vfprintf+0x24>
 b36:	b6 01       	movw	r22, r12
 b38:	80 e2       	ldi	r24, 0x20	; 32
 b3a:	90 e0       	ldi	r25, 0x00	; 0
 b3c:	0e 94 c2 05 	call	0xb84	; 0xb84 <fputc>
 b40:	2a 94       	dec	r2
 b42:	f6 cf       	rjmp	.-20     	; 0xb30 <vfprintf+0x39a>
 b44:	f6 01       	movw	r30, r12
 b46:	86 81       	ldd	r24, Z+6	; 0x06
 b48:	97 81       	ldd	r25, Z+7	; 0x07
 b4a:	02 c0       	rjmp	.+4      	; 0xb50 <vfprintf+0x3ba>
 b4c:	8f ef       	ldi	r24, 0xFF	; 255
 b4e:	9f ef       	ldi	r25, 0xFF	; 255
 b50:	2b 96       	adiw	r28, 0x0b	; 11
 b52:	e2 e1       	ldi	r30, 0x12	; 18
 b54:	0c 94 78 06 	jmp	0xcf0	; 0xcf0 <__epilogue_restores__>

00000b58 <strnlen_P>:
 b58:	fc 01       	movw	r30, r24
 b5a:	05 90       	lpm	r0, Z+
 b5c:	61 50       	subi	r22, 0x01	; 1
 b5e:	70 40       	sbci	r23, 0x00	; 0
 b60:	01 10       	cpse	r0, r1
 b62:	d8 f7       	brcc	.-10     	; 0xb5a <strnlen_P+0x2>
 b64:	80 95       	com	r24
 b66:	90 95       	com	r25
 b68:	8e 0f       	add	r24, r30
 b6a:	9f 1f       	adc	r25, r31
 b6c:	08 95       	ret

00000b6e <strnlen>:
 b6e:	fc 01       	movw	r30, r24
 b70:	61 50       	subi	r22, 0x01	; 1
 b72:	70 40       	sbci	r23, 0x00	; 0
 b74:	01 90       	ld	r0, Z+
 b76:	01 10       	cpse	r0, r1
 b78:	d8 f7       	brcc	.-10     	; 0xb70 <strnlen+0x2>
 b7a:	80 95       	com	r24
 b7c:	90 95       	com	r25
 b7e:	8e 0f       	add	r24, r30
 b80:	9f 1f       	adc	r25, r31
 b82:	08 95       	ret

00000b84 <fputc>:
 b84:	0f 93       	push	r16
 b86:	1f 93       	push	r17
 b88:	cf 93       	push	r28
 b8a:	df 93       	push	r29
 b8c:	fb 01       	movw	r30, r22
 b8e:	23 81       	ldd	r18, Z+3	; 0x03
 b90:	21 fd       	sbrc	r18, 1
 b92:	03 c0       	rjmp	.+6      	; 0xb9a <fputc+0x16>
 b94:	8f ef       	ldi	r24, 0xFF	; 255
 b96:	9f ef       	ldi	r25, 0xFF	; 255
 b98:	2c c0       	rjmp	.+88     	; 0xbf2 <fputc+0x6e>
 b9a:	22 ff       	sbrs	r18, 2
 b9c:	16 c0       	rjmp	.+44     	; 0xbca <fputc+0x46>
 b9e:	46 81       	ldd	r20, Z+6	; 0x06
 ba0:	57 81       	ldd	r21, Z+7	; 0x07
 ba2:	24 81       	ldd	r18, Z+4	; 0x04
 ba4:	35 81       	ldd	r19, Z+5	; 0x05
 ba6:	42 17       	cp	r20, r18
 ba8:	53 07       	cpc	r21, r19
 baa:	44 f4       	brge	.+16     	; 0xbbc <fputc+0x38>
 bac:	a0 81       	ld	r26, Z
 bae:	b1 81       	ldd	r27, Z+1	; 0x01
 bb0:	9d 01       	movw	r18, r26
 bb2:	2f 5f       	subi	r18, 0xFF	; 255
 bb4:	3f 4f       	sbci	r19, 0xFF	; 255
 bb6:	31 83       	std	Z+1, r19	; 0x01
 bb8:	20 83       	st	Z, r18
 bba:	8c 93       	st	X, r24
 bbc:	26 81       	ldd	r18, Z+6	; 0x06
 bbe:	37 81       	ldd	r19, Z+7	; 0x07
 bc0:	2f 5f       	subi	r18, 0xFF	; 255
 bc2:	3f 4f       	sbci	r19, 0xFF	; 255
 bc4:	37 83       	std	Z+7, r19	; 0x07
 bc6:	26 83       	std	Z+6, r18	; 0x06
 bc8:	14 c0       	rjmp	.+40     	; 0xbf2 <fputc+0x6e>
 bca:	8b 01       	movw	r16, r22
 bcc:	ec 01       	movw	r28, r24
 bce:	fb 01       	movw	r30, r22
 bd0:	00 84       	ldd	r0, Z+8	; 0x08
 bd2:	f1 85       	ldd	r31, Z+9	; 0x09
 bd4:	e0 2d       	mov	r30, r0
 bd6:	09 95       	icall
 bd8:	89 2b       	or	r24, r25
 bda:	e1 f6       	brne	.-72     	; 0xb94 <fputc+0x10>
 bdc:	d8 01       	movw	r26, r16
 bde:	16 96       	adiw	r26, 0x06	; 6
 be0:	8d 91       	ld	r24, X+
 be2:	9c 91       	ld	r25, X
 be4:	17 97       	sbiw	r26, 0x07	; 7
 be6:	01 96       	adiw	r24, 0x01	; 1
 be8:	17 96       	adiw	r26, 0x07	; 7
 bea:	9c 93       	st	X, r25
 bec:	8e 93       	st	-X, r24
 bee:	16 97       	sbiw	r26, 0x06	; 6
 bf0:	ce 01       	movw	r24, r28
 bf2:	df 91       	pop	r29
 bf4:	cf 91       	pop	r28
 bf6:	1f 91       	pop	r17
 bf8:	0f 91       	pop	r16
 bfa:	08 95       	ret

00000bfc <__ultoa_invert>:
 bfc:	fa 01       	movw	r30, r20
 bfe:	aa 27       	eor	r26, r26
 c00:	28 30       	cpi	r18, 0x08	; 8
 c02:	51 f1       	breq	.+84     	; 0xc58 <__ultoa_invert+0x5c>
 c04:	20 31       	cpi	r18, 0x10	; 16
 c06:	81 f1       	breq	.+96     	; 0xc68 <__ultoa_invert+0x6c>
 c08:	e8 94       	clt
 c0a:	6f 93       	push	r22
 c0c:	6e 7f       	andi	r22, 0xFE	; 254
 c0e:	6e 5f       	subi	r22, 0xFE	; 254
 c10:	7f 4f       	sbci	r23, 0xFF	; 255
 c12:	8f 4f       	sbci	r24, 0xFF	; 255
 c14:	9f 4f       	sbci	r25, 0xFF	; 255
 c16:	af 4f       	sbci	r26, 0xFF	; 255
 c18:	b1 e0       	ldi	r27, 0x01	; 1
 c1a:	3e d0       	rcall	.+124    	; 0xc98 <__ultoa_invert+0x9c>
 c1c:	b4 e0       	ldi	r27, 0x04	; 4
 c1e:	3c d0       	rcall	.+120    	; 0xc98 <__ultoa_invert+0x9c>
 c20:	67 0f       	add	r22, r23
 c22:	78 1f       	adc	r23, r24
 c24:	89 1f       	adc	r24, r25
 c26:	9a 1f       	adc	r25, r26
 c28:	a1 1d       	adc	r26, r1
 c2a:	68 0f       	add	r22, r24
 c2c:	79 1f       	adc	r23, r25
 c2e:	8a 1f       	adc	r24, r26
 c30:	91 1d       	adc	r25, r1
 c32:	a1 1d       	adc	r26, r1
 c34:	6a 0f       	add	r22, r26
 c36:	71 1d       	adc	r23, r1
 c38:	81 1d       	adc	r24, r1
 c3a:	91 1d       	adc	r25, r1
 c3c:	a1 1d       	adc	r26, r1
 c3e:	20 d0       	rcall	.+64     	; 0xc80 <__ultoa_invert+0x84>
 c40:	09 f4       	brne	.+2      	; 0xc44 <__ultoa_invert+0x48>
 c42:	68 94       	set
 c44:	3f 91       	pop	r19
 c46:	2a e0       	ldi	r18, 0x0A	; 10
 c48:	26 9f       	mul	r18, r22
 c4a:	11 24       	eor	r1, r1
 c4c:	30 19       	sub	r19, r0
 c4e:	30 5d       	subi	r19, 0xD0	; 208
 c50:	31 93       	st	Z+, r19
 c52:	de f6       	brtc	.-74     	; 0xc0a <__ultoa_invert+0xe>
 c54:	cf 01       	movw	r24, r30
 c56:	08 95       	ret
 c58:	46 2f       	mov	r20, r22
 c5a:	47 70       	andi	r20, 0x07	; 7
 c5c:	40 5d       	subi	r20, 0xD0	; 208
 c5e:	41 93       	st	Z+, r20
 c60:	b3 e0       	ldi	r27, 0x03	; 3
 c62:	0f d0       	rcall	.+30     	; 0xc82 <__ultoa_invert+0x86>
 c64:	c9 f7       	brne	.-14     	; 0xc58 <__ultoa_invert+0x5c>
 c66:	f6 cf       	rjmp	.-20     	; 0xc54 <__ultoa_invert+0x58>
 c68:	46 2f       	mov	r20, r22
 c6a:	4f 70       	andi	r20, 0x0F	; 15
 c6c:	40 5d       	subi	r20, 0xD0	; 208
 c6e:	4a 33       	cpi	r20, 0x3A	; 58
 c70:	18 f0       	brcs	.+6      	; 0xc78 <__ultoa_invert+0x7c>
 c72:	49 5d       	subi	r20, 0xD9	; 217
 c74:	31 fd       	sbrc	r19, 1
 c76:	40 52       	subi	r20, 0x20	; 32
 c78:	41 93       	st	Z+, r20
 c7a:	02 d0       	rcall	.+4      	; 0xc80 <__ultoa_invert+0x84>
 c7c:	a9 f7       	brne	.-22     	; 0xc68 <__ultoa_invert+0x6c>
 c7e:	ea cf       	rjmp	.-44     	; 0xc54 <__ultoa_invert+0x58>
 c80:	b4 e0       	ldi	r27, 0x04	; 4
 c82:	a6 95       	lsr	r26
 c84:	97 95       	ror	r25
 c86:	87 95       	ror	r24
 c88:	77 95       	ror	r23
 c8a:	67 95       	ror	r22
 c8c:	ba 95       	dec	r27
 c8e:	c9 f7       	brne	.-14     	; 0xc82 <__ultoa_invert+0x86>
 c90:	00 97       	sbiw	r24, 0x00	; 0
 c92:	61 05       	cpc	r22, r1
 c94:	71 05       	cpc	r23, r1
 c96:	08 95       	ret
 c98:	9b 01       	movw	r18, r22
 c9a:	ac 01       	movw	r20, r24
 c9c:	0a 2e       	mov	r0, r26
 c9e:	06 94       	lsr	r0
 ca0:	57 95       	ror	r21
 ca2:	47 95       	ror	r20
 ca4:	37 95       	ror	r19
 ca6:	27 95       	ror	r18
 ca8:	ba 95       	dec	r27
 caa:	c9 f7       	brne	.-14     	; 0xc9e <__ultoa_invert+0xa2>
 cac:	62 0f       	add	r22, r18
 cae:	73 1f       	adc	r23, r19
 cb0:	84 1f       	adc	r24, r20
 cb2:	95 1f       	adc	r25, r21
 cb4:	a0 1d       	adc	r26, r0
 cb6:	08 95       	ret

00000cb8 <__prologue_saves__>:
 cb8:	2f 92       	push	r2
 cba:	3f 92       	push	r3
 cbc:	4f 92       	push	r4
 cbe:	5f 92       	push	r5
 cc0:	6f 92       	push	r6
 cc2:	7f 92       	push	r7
 cc4:	8f 92       	push	r8
 cc6:	9f 92       	push	r9
 cc8:	af 92       	push	r10
 cca:	bf 92       	push	r11
 ccc:	cf 92       	push	r12
 cce:	df 92       	push	r13
 cd0:	ef 92       	push	r14
 cd2:	ff 92       	push	r15
 cd4:	0f 93       	push	r16
 cd6:	1f 93       	push	r17
 cd8:	cf 93       	push	r28
 cda:	df 93       	push	r29
 cdc:	cd b7       	in	r28, 0x3d	; 61
 cde:	de b7       	in	r29, 0x3e	; 62
 ce0:	ca 1b       	sub	r28, r26
 ce2:	db 0b       	sbc	r29, r27
 ce4:	0f b6       	in	r0, 0x3f	; 63
 ce6:	f8 94       	cli
 ce8:	de bf       	out	0x3e, r29	; 62
 cea:	0f be       	out	0x3f, r0	; 63
 cec:	cd bf       	out	0x3d, r28	; 61
 cee:	09 94       	ijmp

00000cf0 <__epilogue_restores__>:
 cf0:	2a 88       	ldd	r2, Y+18	; 0x12
 cf2:	39 88       	ldd	r3, Y+17	; 0x11
 cf4:	48 88       	ldd	r4, Y+16	; 0x10
 cf6:	5f 84       	ldd	r5, Y+15	; 0x0f
 cf8:	6e 84       	ldd	r6, Y+14	; 0x0e
 cfa:	7d 84       	ldd	r7, Y+13	; 0x0d
 cfc:	8c 84       	ldd	r8, Y+12	; 0x0c
 cfe:	9b 84       	ldd	r9, Y+11	; 0x0b
 d00:	aa 84       	ldd	r10, Y+10	; 0x0a
 d02:	b9 84       	ldd	r11, Y+9	; 0x09
 d04:	c8 84       	ldd	r12, Y+8	; 0x08
 d06:	df 80       	ldd	r13, Y+7	; 0x07
 d08:	ee 80       	ldd	r14, Y+6	; 0x06
 d0a:	fd 80       	ldd	r15, Y+5	; 0x05
 d0c:	0c 81       	ldd	r16, Y+4	; 0x04
 d0e:	1b 81       	ldd	r17, Y+3	; 0x03
 d10:	aa 81       	ldd	r26, Y+2	; 0x02
 d12:	b9 81       	ldd	r27, Y+1	; 0x01
 d14:	ce 0f       	add	r28, r30
 d16:	d1 1d       	adc	r29, r1
 d18:	0f b6       	in	r0, 0x3f	; 63
 d1a:	f8 94       	cli
 d1c:	de bf       	out	0x3e, r29	; 62
 d1e:	0f be       	out	0x3f, r0	; 63
 d20:	cd bf       	out	0x3d, r28	; 61
 d22:	ed 01       	movw	r28, r26
 d24:	08 95       	ret

00000d26 <_exit>:
 d26:	f8 94       	cli

00000d28 <__stop_program>:
 d28:	ff cf       	rjmp	.-2      	; 0xd28 <__stop_program>
